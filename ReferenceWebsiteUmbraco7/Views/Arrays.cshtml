@model ReferenceWebsite.Models.ArraysViewModel
@{
    Layout = null;
}

@Html.Partial("breadcrumbs")

<table border=1>
	<thead>
		<tr>
			<th>Type</th>
			<th>Expected</th>
			<th>Type</th>
			<th>Actual</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>IntArray</td>
			<td>7 , 14, 21</td>
			<td>@Model.IntArray.GetType().Name</td>
			<td>@for (var i = 0; i < Model.IntArray.Length; i++)
				{
					<span>@Model.IntArray[i]</span>
					if (i < Model.IntArray.Length - 1)
					{
						<span>,</span>
					}
				}
			</td>
		</tr>
		<tr>
			<td>StringArray</td>
			<td>cat , dog , fish</td>
			<td>@Model.StringArray.GetType().Name</td>
			<td>@for (var i = 0; i < Model.StringArray.Length; i++)
				{
					<span>@Model.StringArray[i]</span>
					if (i < Model.StringArray.Length - 1)
					{
						<span>,</span>
					}
				}
			</td>
		</tr>
	    <tr>
	        <td>StringList</td>
	        <td>Ken Sykora , Paul Trandem</td>
	        <td>@Model.StaffList.GetType().Name</td>
	        <td>@for (var i = 0; i < Model.StaffList.Count; i++)
	            {
	                <span>@Model.StaffList[i].Name</span>
	                if (i < Model.StaffList.Count - 1)
	                {
	                    <span>,</span>
	                }
	            }
	        </td>
	    </tr>
	    <tr>
	        <td>Checkbox List</td>
	        <td>Checkbox Option 1 , Checkbox Option 2</td>
	        <td>@Model.CheckboxList.GetType().Name</td>
	        <td>@for (var i = 0; i < Model.CheckboxList.Length; i++)
	            {
	                <span>@Model.CheckboxList[i]</span>
	                if (i < Model.CheckboxList.Length - 1)
	                {
	                    <span>,</span>
	                }
	            }</td>
	    </tr>
	    <tr>
	        <td>Dictionary Picker</td>
	        <td>Apple , Pear</td>
	        <td>@Model.DictionaryPicker.GetType().Name</td>
	        <td>@for (var i = 0; i < Model.DictionaryPicker.Length; i++)
	            {
	                <span>@Model.DictionaryPicker[i]</span>
	                if (i < Model.DictionaryPicker.Length - 1)
	                {
	                    <span>,</span>
	                }
	            }</td>
	    </tr>
	    <tr>
	        <td>Dropdown List Multiple Publish Keys (Prevalue IDs)</td>
	        <td>56 , 57</td>
	        <td>@Model.DropDownListMultiplePublishKeys.GetType().Name</td>
	        <td>@for (var i = 0; i < Model.DropDownListMultiplePublishKeys.Length; i++)
	            {
	                <span>@Model.DropDownListMultiplePublishKeys[i]</span>
	                if (i < Model.DropDownListMultiplePublishKeys.Length - 1)
	                {
	                    <span>,</span>
	                }
	            }</td>
	    </tr>
	    <tr>
	        <td>Dropdown List Multiple Publish Keys (Values)</td>
	        <td>DDLMPK Test 1 , DDLMPK Test 2</td>
	        <td>@Model.DropDownListMultiplePublishKeys.GetType().Name</td>
	        <td>@for (var i = 0; i < Model.DropDownListMultiplePublishKeys.Length; i++)
	            {
	                <span>@library.GetPreValueAsString(Model.DropDownListMultiplePublishKeys[i])</span>
	                if (i < Model.DropDownListMultiplePublishKeys.Length - 1)
	                {
	                    <span>,</span>
	                }
	            }</td>
	    </tr>
        <tr>
	        <td>Dropdown List Multiple</td>
	        <td>DDLM Test 2 , DDLM Test 3</td>
	        <td>@Model.DropDownListMultiple.GetType().Name</td>
            <td>@for (var i = 0; i < Model.DropDownListMultiple.Length; i++)
	            {
	                <span>@Model.DropDownListMultiple[i]</span>
                    if (i < Model.DropDownListMultiple.Length - 1)
	                {
	                    <span>,</span>
	                }
	            }</td>
	    </tr>
	</tbody>
</table>