<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
    <metadata>
        <id>UmbracoVault</id>
        <version>0.0.0</version>
        <title>Umbraco Vault</title>
        <authors>The Nerdery</authors>
        <owners>thenerdery</owners>
        <licenseUrl>https://github.com/thenerdery/UmbracoVault/blob/master/LICENSE</licenseUrl>
        <projectUrl>https://github.com/thenerdery/UmbracoVault</projectUrl>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <description>Vault for Umbraco is an easy-to-use, extensible ORM to quickly and easily get strongly-typed Umbraco CMS data into your views. It allows you to create lightly-decorated classes that Vault will understand how to hydrate. This gives you the full view model-style experience in Umbraco that you are accustomed to in MVC, complete with strongly-typed view properties (no more magic strings in your views).</description>
        <summary>Vault for Umbraco is an easy-to-use, extensible ORM to quickly and easily get strongly-typed Umbraco CMS data into your views.</summary>
        <releaseNotes>**New Feature: Lazy Loading**

          Umbraco Vault now includes support for lazy loading of properties. Properties that are expensive to hydrate,
          such as collections, can be marked as `virtual` and they will be loaded when accessed. See https://github.com/thenerdery/UmbracoVault/wiki/Lazy-property-loading
          article for more detail on this feature.

          **New Type Handlers**

            * Vault now supports nullable types for primitives and structs. See https://github.com/thenerdery/UmbracoVault/wiki/Umbraco-Data-Type---C%23-Data-Type-Grid#nullable-data-types for more detail.
            * Vault now supports mapping from JSON data stored within properties. See https://github.com/thenerdery/UmbracoVault/wiki/Umbraco-Data-Type---C%23-Data-Type-Grid#json-data for more detail.

          **Issues**

            * Fixed issue where exception would be thrown if loading an assembly threw an error. Added try/catch around logic and tracing any issues identified.
            * Fixed issue if an external assembly attempts to register a type already handled, that an exception would be thrown. A trace warning is now written instead.

          **Other**

            * Codebase has been updated to build against VS 2015 and C# 6
            * Reference sites for testing builds have been updated to the latest v6 and v7 versions, including ASP.Net MVC5
            * Various code cleanup

            This is a pretty significant release! Thanks to @NerderyMGlanzer, @technicallyerik, and @jesse-black for their contributions!
          </releaseNotes>
        <copyright>Copyright 2014</copyright>
        <tags>C# Umbraco Nerdery Mapping ObjectMapper ORM CMS</tags>
        <dependencies>
          <dependency id="UmbracoCms.Core" version="6.2.0" />
			    <dependency id="Castle.Core" version="3.3.3" />
          <dependency id="Newtonsoft.Json" version="4.5.11" />
        </dependencies>
    </metadata>
</package>